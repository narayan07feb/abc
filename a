public MbrRgstTyp getMbrRegstType(Mbr mbr) throws GlobalNavException {
		try{
			/*if(!StringUtils.isEmpty(sixDigitSsn)){
				List<MbrPrtl> mbrPrtls=jpaMemberPortalRepository.findMbrPrtl(healthSafeId,provisionMemberId,portalShortNm,firstNm,lastNm,aliasFIrstNameList,aliasLastNameList,dob,subscriberId,zip,ssn,mbrPrtlSpcMbrId,policyNbr);
				if(!CollectionUtils.isEmpty(mbrPrtls)){
					List<MbrPrtl> mbrPrtlList=new ArrayList<MbrPrtl>();
					for(MbrPrtl mbrPrtl:mbrPrtls){
						if(mbrPrtl.getMbrByMbrId().getMdmMbrSsn().equalsIgnoreCase(sixDigitSsn))
							mbrPrtlList.add(mbrPrtl);
					}
					return mbrPrtlList;
				}
				else{
					return null;
				}
			}
			else{*/
				return jpaMemberPortalRepository.findMbrRegstType(mbr);
			//}
		} catch(GlobalNavException  ex)
		{
			throw ex;
		}
		catch(Exception  ex)
		{
			MessagesType mts = new MessagesType();
			MessageType mt=new MessageType();
			mt.setCode("500");
			mt.setSeverity(Constants.Severity.EXCEPTION.name());
			mt.setName(Constants.StatusMsgNm.NOTFOUND.name());
			StringBuilder sb = new StringBuilder();
			sb.append("Exception in lookup member registration type table with registration type Id\n");
+			sb.append("RegistrationTypeId:'").append(mbr.getRegistrationTypId()).append("'\n");
 			
 			mt.setDescription(sb.toString());
 			mts.getMessage().add(mt);
			StatusType st = new StatusType();
			st.setMessages(mts);
		//	if(LOGGER.isDebugEnabled())
		//		LOGGER.debug(mt.getDescription(),ex);
			throw new GlobalNavException(st);
		}
	}
